#!/usr/bin/env python3

import re
import sys
from collections import Counter

def read_data():
    for line in sys.stdin.readlines():
        m = re.match(r'(\d+),(\d+)\s+->\s+(\d+),(\d+)\s*$', line)
        if not m:
            print('ERROR: Unable to parse line "%s"' % line.strip())
            sys.exit(1)
        yield([int(x) for x in m.groups()])


def draw_lines(data):
    for ((x1, y1), (x2, y2)) in data:
        if x1 != x2 and y1 != y2:
            if x1 < x2:
                x2 += 1
                xstep = 1
            else:
                x2 -= 1
                xstep = -1
            if y1 < y2:
                y2 += 1
                ystep = 1
            else:
                y2 -= 1
                ystep = -1
            for x, y in zip(range(x1, x2, xstep), range(y1, y2, ystep)):
                yield (x, y)
        if x1 == x2:
            for y in range(min(y1, y2), max(y1, y2) + 1):
                yield (x1, y)
        if y1 == y2:
            for x in range(min(x1, x2), max(x1, x2) + 1):
                yield (x, y1)

data = [((x[0], x[1]), (x[2], x[3])) for x in read_data()]
lines = draw_lines(data)
hot_spots = {k:v for (k, v) in Counter(draw_lines(data)).items() if v > 1}
print(len(hot_spots))
